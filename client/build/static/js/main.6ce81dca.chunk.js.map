{"version":3,"sources":["components/layout/spinner.gif","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/index.js","actions/types.js","utils/setAuthToken.js","store.js","utils/api.js","actions/alert.js","actions/auth.js","components/layout/NavBar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/layout/alert.js","components/dashboard/DashboardActions.js","actions/profile.js","components/dashboard/Experience.js","components/dashboard/Education.js","components/dashboard/Dashboard.js","components/profile-form/ProfileForm.js","components/profile-form/AddExperience.js","components/profile-form/AddEducation.js","components/layout/Spinner.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/ProfileExperience.js","components/profile/ProfileEducation.js","components/profile/ProfileGithub.js","components/profile/Profile.js","components/posts/PostItem.js","actions/post.js","components/posts/PostForm.js","components/posts/Posts.js","components/post/CommentForm.js","components/post/CommentItem.js","components/post/Post.js","components/layout/NotFound.js","components/routing/PrivateRoute.js","components/routing/Routes.js","App.js","index.js"],"names":["module","exports","initialState","token","localStorage","getItem","isAuthenticated","loading","user","profile","profiles","repos","error","posts","post","combineReducers","alert","state","action","type","payload","filter","id","auth","setItem","removeItem","_id","map","likes","comments","comment","setAuthToken","api","defaults","headers","common","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","currentState","getState","subscribe","previousState","axios","create","baseURL","interceptors","response","use","res","err","data","msg","dispatch","Promise","reject","setAlert","alertType","timeout","uuidv4","setTimeout","loadUser","a","get","connect","logout","authLinks","to","className","onClick","href","guestLinks","register","formData","errors","forEach","useState","name","email","password","password2","setFormData","onChange","e","target","value","onSubmit","preventDefault","console","log","class","placeholder","required","minLength","login","body","alerts","length","key","DashboardActions","getCurrentProfile","statusText","status","deleteExperience","delete","experience","experiences","exp","company","title","format","moment","utc","from","deleteEducation","education","educations","edu","school","degree","deleteAccount","window","confirm","useEffect","website","location","skills","githubusername","bio","twitter","facebook","linkedin","youtube","instagram","createProfile","history","edit","push","displaySocialInputs","toggleSocialInputs","profileData","social","Array","isArray","join","addExperience","put","current","description","checked","disabled","cols","rows","addEducation","fieldofstudy","src","spinner","style","width","margin","display","alt","ProfileItem","avatar","slice","skill","index","getProfiles","Spinner","ProfileTop","rel","ProfileAbout","trim","split","ProfileExperience","ProfileEducation","getGithubRepos","username","repo","html_url","stargazers_count","watchers_count","forks_count","getProfileById","userId","match","params","PostItem","addLike","removeLike","deletePost","text","date","showActions","defaultProps","addPost","setText","getPosts","addComment","postId","deleteComment","commentId","getPost","NotFound","Component","component","rest","render","props","Routes","exact","path","Register","Login","Profiles","Profile","Dashboard","ProfileForm","AddExperience","AddEducation","Posts","Post","App","Landing","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ce81dca.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.144fbbd3.gif\";","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter((alert) => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  REGISTER_SUCCESS,\r\n  //REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  //LOGIN_FAIL,\r\n  LOGOUT,\r\n  ACCOUNT_DELETED,\r\n  REGISTER_FAIL,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: payload,\r\n      };\r\n    case REGISTER_SUCCESS:\r\n      localStorage.setItem('token', payload.token);\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n      };\r\n\r\n    case REGISTER_FAIL:\r\n      localStorage.removeItem('token');\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n      };\r\n\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n      };\r\n    case ACCOUNT_DELETED:\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        user: null,\r\n      };\r\n    case AUTH_ERROR:\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        user: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_PROFILE,\r\n  PROFILE_ERROR,\r\n  CLEAR_PROFILE,\r\n  UPDATE_PROFILE,\r\n  GET_PROFILES,\r\n  GET_REPOS,\r\n  NO_REPOS,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  profile: null,\r\n  profiles: [],\r\n  repos: [],\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_PROFILE:\r\n    case UPDATE_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: payload,\r\n        loading: false,\r\n      };\r\n    case GET_PROFILES:\r\n      return {\r\n        ...state,\r\n        profiles: payload,\r\n        loading: false,\r\n      };\r\n    case PROFILE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n        profile: null,\r\n      };\r\n    case CLEAR_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: null,\r\n        repos: [],\r\n        loading: false,\r\n      };\r\n    case GET_REPOS:\r\n      return {\r\n        ...state,\r\n        repos: payload,\r\n        loading: false,\r\n      };\r\n    case NO_REPOS:\r\n      return {\r\n        ...state,\r\n        repos: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_POSTS,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_POST,\r\n  ADD_POST,\r\n  GET_POST,\r\n  ADD_COMMENT,\r\n  REMOVE_COMMENT,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  post: null,\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: payload,\r\n        loading: false,\r\n      };\r\n    case GET_POST:\r\n      return {\r\n        ...state,\r\n        post: payload,\r\n        loading: false,\r\n      };\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        posts: [payload, ...state.posts],\r\n        loading: false,\r\n      };\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter((post) => post._id !== payload),\r\n        loading: false,\r\n      };\r\n    case POST_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n    case UPDATE_LIKES:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map((post) =>\r\n          post._id === payload.id ? { ...post, likes: payload.likes } : post\r\n        ),\r\n        loading: false,\r\n      };\r\n    case ADD_COMMENT:\r\n      return {\r\n        ...state,\r\n        post: { ...state.post, comments: payload },\r\n        loading: false,\r\n      };\r\n    case REMOVE_COMMENT:\r\n      return {\r\n        ...state,\r\n        post: {\r\n          ...state.post,\r\n          comments: state.post.comments.filter(\r\n            (comment) => comment._id !== payload\r\n          ),\r\n        },\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport alert from './alert';\r\nimport auth from './auth';\r\nimport profile from './profile';\r\nimport post from './post';\r\n\r\nexport default combineReducers({\r\n  alert,\r\n  auth,\r\n  profile,\r\n  post,\r\n});\r\n","export const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\nexport const USER_LOADED = 'USER_LOADED';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const GET_PROFILE = 'GET_PROFILE';\r\nexport const GET_PROFILES = 'GET_PROFILES';\r\nexport const GET_REPOS = 'GET_REPOS';\r\nexport const NO_REPOS = 'NO_REPOS';\r\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE';\r\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\r\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\r\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED';\r\nexport const GET_POSTS = 'GET_POSTS';\r\nexport const GET_POST = 'GET_POST';\r\nexport const POST_ERROR = 'POST_ERROR';\r\nexport const UPDATE_LIKES = 'UPDATE_LIKES';\r\nexport const DELETE_POST = 'DELETE_POST';\r\nexport const ADD_POST = 'ADD_POST';\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT';\r\n","import api from './api';\r\n\r\nconst setAuthToken = (token) => {\r\n  if (token) {\r\n    api.defaults.headers.common['x-auth-token'] = token;\r\n    localStorage.setItem('token', token);\r\n  } else {\r\n    delete api.defaults.headers.common['x-auth-token'];\r\n    localStorage.removeItem('token');\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\nimport setAuthToken from './utils/setAuthToken';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\n// set up a store subscription listener\r\n// to store the users token in localStorage\r\n\r\n// initialize current state from redux store for subscription comparison\r\n// preventing undefined error\r\nlet currentState = store.getState();\r\n\r\nstore.subscribe(() => {\r\n  // keep track of the previous and current state to compare changes\r\n  let previousState = currentState;\r\n  currentState = store.getState();\r\n  // if the token changes set the value in localStorage and axios headers\r\n  if (previousState.auth.token !== currentState.auth.token) {\r\n    const token = currentState.auth.token;\r\n    setAuthToken(token);\r\n  }\r\n});\r\n\r\nexport default store;\r\n","import axios from 'axios';\r\nimport store from '../store';\r\nimport { LOGOUT } from '../actions/types';\r\n\r\nconst api = axios.create({\r\n  baseURL: '/api',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n/**\r\n intercept any error responses from the api\r\n and check if the token is no longer valid.\r\n ie. Token has expired\r\n logout the user if the token has expired\r\n**/\r\n\r\napi.interceptors.response.use(\r\n  (res) => res,\r\n  (err) => {\r\n    if (err.response.data.msg === 'Token is not valid') {\r\n      store.dispatch({ type: LOGOUT });\r\n    }\r\n    return Promise.reject(err);\r\n  }\r\n);\r\n\r\nexport default api;\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport { SET_ALERT, REMOVE_ALERT } from './types';\r\n\r\nexport const setAlert = (msg, alertType, timeout = 5000) => (dispatch) => {\r\n  const id = uuidv4();\r\n  dispatch({\r\n    type: SET_ALERT,\r\n    payload: { msg, alertType, id },\r\n  });\r\n\r\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\r\n};\r\n","import api from '../utils/api';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_PROFILE,\r\n} from './types';\r\n\r\n// Load User\r\nexport const loadUser = () => async (dispatch) => {\r\n  try {\r\n    const res = await api.get('/auth');\r\n\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n    });\r\n  }\r\n};\r\n\r\n// Register User\r\nexport const register = (formData) => async (dispatch) => {\r\n  try {\r\n    const res = await api.post('/users', formData);\r\n\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: REGISTER_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n// Login User\r\nexport const login = (email, password) => async (dispatch) => {\r\n  const body = { email, password };\r\n\r\n  try {\r\n    const res = await api.post('/auth', body);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n// Logout/ Clear Profile\r\nexport const logout = () => (dispatch) => {\r\n  dispatch({ type: CLEAR_PROFILE });\r\n  dispatch({ type: LOGOUT });\r\n};\r\n","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { logout } from '../../actions/auth';\r\n\r\nconst NavBar = ({ auth: { isAuthenticated, loading }, logout }) => {\r\n  const authLinks = (\r\n    <ul>\r\n      <li>\r\n        <Link to='/profiles'>Developers</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/posts'>Posts</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/dashboard'>\r\n          <i className='fas fa-user' />{' '}\r\n          <span className='hide-sm'>Dashboard</span>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <a onClick={logout} href='#!'>\r\n          <i className='fas fa-sign-out-alt' />{' '}\r\n          <span className='hide-sm'>Logout</span>\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  const guestLinks = (\r\n    <ul>\r\n      <li>\r\n        <Link to='/profiles'>Developers</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/register'>Register</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/login'>Login</Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n  return (\r\n    <nav className='navbar bg-dark'>\r\n      <h1>\r\n        <Link to='/'>\r\n          <i className='fas fa-code'></i> DevConnector\r\n        </Link>\r\n      </h1>\r\n      {!loading && (\r\n        <Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavBar.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(NavBar);\r\n","import React from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Landing = ({ isAuthenticated }) => {\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/dashboard' />;\r\n  }\r\n\r\n  return (\r\n    <section className='landing'>\r\n      <div className='dark-overlay'>\r\n        <div className='landing-inner'>\r\n          <h1 className='x-large'>Developer Connector</h1>\r\n          <p className='lead'>\r\n            Create a developer profile/portfolio, share posts and get help from\r\n            other developers\r\n          </p>\r\n          <div className='buttons'>\r\n            <Link to='/register' className='btn btn-primary'>\r\n              Sign Up\r\n            </Link>\r\n            <Link to='/login' className='btn btn-light'>\r\n              Login\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nLanding.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Fragment, useState } from 'react';\r\n//import axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { setAlert } from '../../actions/alert';\r\nimport { register } from '../../actions/auth';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nconst Register = ({ setAlert, register, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    password2: '',\r\n  });\r\n\r\n  const { name, email, password, password2 } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (password !== password2) {\r\n      console.log('Passwords do not match');\r\n      setAlert('Passwords do not match', 'danger');\r\n    } else {\r\n      console.log('SUCCESS');\r\n      register({ name, email, password });\r\n      /* const newUser = {\r\n        name,\r\n        email,\r\n        password,\r\n      };\r\n\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        };\r\n\r\n        const body = JSON.stringify(newUser);\r\n        const res = await axios.post('/api/users', body, config);\r\n        console.log(res.data);\r\n      } catch (err) {\r\n        console.error(err.response.data);\r\n      }*/\r\n    }\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/dashboard' />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <section className='container'>\r\n        <h1 className='large text-primary'>Sign Up</h1>\r\n        <p class='lead'>\r\n          <i class='fas fa-user'></i> Create Your Account\r\n        </p>\r\n        <form class='form' onSubmit={(e) => onSubmit(e)}>\r\n          <div class='form-group'>\r\n            <input\r\n              type='text'\r\n              placeholder='Name'\r\n              name='name'\r\n              value={name}\r\n              onChange={(e) => onChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n          <div class='form-group'>\r\n            <input\r\n              type='email'\r\n              placeholder='Email Address'\r\n              name='email'\r\n              value={email}\r\n              onChange={(e) => onChange(e)}\r\n              required\r\n            />\r\n            <small class='form-text'>\r\n              This site uses Gravatar so if you want a profile image, use a\r\n              Gravatar email\r\n            </small>\r\n          </div>\r\n          <div class='form-group'>\r\n            <input\r\n              type='password'\r\n              placeholder='Password'\r\n              name='password'\r\n              minLength='6'\r\n              value={password}\r\n              onChange={(e) => onChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n          <div class='form-group'>\r\n            <input\r\n              type='password'\r\n              placeholder='Confirm Password'\r\n              name='password2'\r\n              minLength='6'\r\n              value={password2}\r\n              onChange={(e) => onChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n          <input type='submit' class='btn btn-primary' value='Register' />\r\n        </form>\r\n        <p class='my-1'>\r\n          Already have an account? <Link to='/login'>Sign In</Link>\r\n        </p>\r\n      </section>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nRegister.propTypes = {\r\n  setAlert: PropTypes.func.isRequired,\r\n  register: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setAlert, register })(Register);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { login } from '../../actions/auth';\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const { email, password } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    login(email, password);\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/dashboard' />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Sign In</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user' /> Sign Into Your Account\r\n      </p>\r\n      <form className='form' onSubmit={onSubmit}>\r\n        <div className='form-group'>\r\n          <input\r\n            type='email'\r\n            placeholder='Email Address'\r\n            name='email'\r\n            value={email}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='password'\r\n            placeholder='Password'\r\n            name='password'\r\n            value={password}\r\n            onChange={onChange}\r\n            minLength='6'\r\n          />\r\n        </div>\r\n        <input type='submit' className='btn btn-primary' value='Login' />\r\n      </form>\r\n      <p className='my-1'>\r\n        Don't have an account? <Link to='/register'>Sign Up</Link>\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Alert = ({ alerts }) =>\r\n  alerts !== null &&\r\n  alerts.length > 0 &&\r\n  alerts.map((alert) => (\r\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\r\n      {alert.msg}\r\n    </div>\r\n  ));\r\n\r\nAlert.propTypes = {\r\n  alerts: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  alerts: state.alert,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst DashboardActions = () => {\r\n  return (\r\n    <div className='dash-buttons'>\r\n      <Link to='/edit-profile' className='btn btn-light'>\r\n        <i className='fas fa-user-circle text-primary' /> Edit Profile\r\n      </Link>\r\n      <Link to='/add-experience' className='btn btn-light'>\r\n        <i className='fab fa-black-tie text-primary' /> Add Experience\r\n      </Link>\r\n      <Link to='/add-education' className='btn btn-light'>\r\n        <i className='fas fa-graduation-cap text-primary' /> Add Education\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardActions;\r\n","import api from '../utils/api';\r\nimport { setAlert } from './alert';\r\n\r\nimport {\r\n  GET_PROFILE,\r\n  GET_PROFILES,\r\n  PROFILE_ERROR,\r\n  UPDATE_PROFILE,\r\n  CLEAR_PROFILE,\r\n  ACCOUNT_DELETED,\r\n  GET_REPOS,\r\n  NO_REPOS,\r\n} from './types';\r\n\r\n// Get current users profile\r\nexport const getCurrentProfile = () => async (dispatch) => {\r\n  try {\r\n    const res = await api.get('/profile/me');\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Get all profiles\r\nexport const getProfiles = () => async (dispatch) => {\r\n  dispatch({ type: CLEAR_PROFILE });\r\n\r\n  try {\r\n    const res = await api.get('/profile');\r\n\r\n    dispatch({\r\n      type: GET_PROFILES,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Get profile by ID\r\nexport const getProfileById = (userId) => async (dispatch) => {\r\n  try {\r\n    const res = await api.get(`/profile/user/${userId}`);\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Get Github repos\r\nexport const getGithubRepos = (username) => async (dispatch) => {\r\n  try {\r\n    const res = await api.get(`/profile/github/${username}`);\r\n\r\n    dispatch({\r\n      type: GET_REPOS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: NO_REPOS,\r\n    });\r\n  }\r\n};\r\n\r\n// Create or update profile\r\nexport const createProfile = (formData, history, edit = false) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    const res = await api.post('/profile', formData);\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\r\n\r\n    if (!edit) {\r\n      history.push('/dashboard');\r\n    }\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add Experience\r\nexport const addExperience = (formData, history) => async (dispatch) => {\r\n  try {\r\n    const res = await api.put('/profile/experience', formData);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert('Experience Added', 'success'));\r\n\r\n    history.push('/dashboard');\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add Education\r\nexport const addEducation = (formData, history) => async (dispatch) => {\r\n  try {\r\n    const res = await api.put('/profile/education', formData);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert('Education Added', 'success'));\r\n\r\n    history.push('/dashboard');\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Delete experience\r\nexport const deleteExperience = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await api.delete(`/profile/experience/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert('Experience Removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Delete education\r\nexport const deleteEducation = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await api.delete(`/profile/education/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert('Education Removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Delete account & profile\r\nexport const deleteAccount = () => async (dispatch) => {\r\n  if (window.confirm('Are you sure? This can NOT be undone!')) {\r\n    try {\r\n      await api.delete('/profile');\r\n\r\n      dispatch({ type: CLEAR_PROFILE });\r\n      dispatch({ type: ACCOUNT_DELETED });\r\n\r\n      dispatch(setAlert('Your account has been permanently deleted'));\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  }\r\n};\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\nimport moment from 'moment';\r\nimport { connect } from 'react-redux';\r\nimport { deleteExperience } from '../../actions/profile';\r\n\r\nconst Experience = ({ experience, deleteExperience }) => {\r\n  const experiences = experience.map((exp) => (\r\n    <tr key={exp._id}>\r\n      <td>{exp.company}</td>\r\n      <td className='hide-sm'>{exp.title}</td>\r\n      <td>\r\n        <Moment format='YYYY/MM/DD'>{moment.utc(exp.from)}</Moment> -{' '}\r\n        {exp.to === null ? (\r\n          ' Now'\r\n        ) : (\r\n          <Moment format='YYYY/MM/DD'>{moment.utc(exp.to)}</Moment>\r\n        )}\r\n      </td>\r\n      <td>\r\n        <button\r\n          onClick={() => deleteExperience(exp._id)}\r\n          className='btn btn-danger'\r\n        >\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  ));\r\n\r\n  return (\r\n    <Fragment>\r\n      <h2 className='my-2'>Experience Credentials</h2>\r\n      <table className='table'>\r\n        <thead>\r\n          <tr>\r\n            <th>Company</th>\r\n            <th className='hide-sm'>Title</th>\r\n            <th className='hide-sm'>Years</th>\r\n            <th />\r\n          </tr>\r\n        </thead>\r\n        <tbody>{experiences}</tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nExperience.propTypes = {\r\n  experience: PropTypes.array.isRequired,\r\n  deleteExperience: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteExperience })(Experience);\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\nimport moment from 'moment';\r\nimport { connect } from 'react-redux';\r\nimport { deleteEducation } from '../../actions/profile';\r\n\r\nconst Education = ({ education, deleteEducation }) => {\r\n  const educations = education.map((edu) => (\r\n    <tr key={edu._id}>\r\n      <td>{edu.school}</td>\r\n      <td className='hide-sm'>{edu.degree}</td>\r\n      <td>\r\n        <Moment format='YYYY/MM/DD'>{moment.utc(edu.from)}</Moment> -{' '}\r\n        {edu.to === null ? (\r\n          ' Now'\r\n        ) : (\r\n          <Moment format='YYYY/MM/DD'>{moment.utc(edu.to)}</Moment>\r\n        )}\r\n      </td>\r\n      <td>\r\n        <button\r\n          onClick={() => deleteEducation(edu._id)}\r\n          className='btn btn-danger'\r\n        >\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  ));\r\n\r\n  return (\r\n    <Fragment>\r\n      <h2 className='my-2'>Education Credentials</h2>\r\n      <table className='table'>\r\n        <thead>\r\n          <tr>\r\n            <th>School</th>\r\n            <th className='hide-sm'>Degree</th>\r\n            <th className='hide-sm'>Years</th>\r\n            <th />\r\n          </tr>\r\n        </thead>\r\n        <tbody>{educations}</tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEducation.propTypes = {\r\n  education: PropTypes.array.isRequired,\r\n  deleteEducation: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteEducation })(Education);\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport DashboardActions from './DashboardActions';\r\nimport Experience from './Experience';\r\nimport Education from './Education';\r\nimport { getCurrentProfile, deleteAccount } from '../../actions/profile';\r\n\r\nconst Dashboard = ({\r\n  getCurrentProfile,\r\n  deleteAccount,\r\n  auth: { user },\r\n  profile: { profile },\r\n}) => {\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n  }, [getCurrentProfile]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Dashboard</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user' /> Welcome {user && user.name}\r\n      </p>\r\n      {profile !== null ? (\r\n        <Fragment>\r\n          <DashboardActions />\r\n          <Experience experience={profile.experience} />\r\n          <Education education={profile.education} />\r\n\r\n          <div className='my-2'>\r\n            <button className='btn btn-danger' onClick={() => deleteAccount()}>\r\n              <i className='fas fa-user-minus' /> Delete My Account\r\n            </button>\r\n          </div>\r\n        </Fragment>\r\n      ) : (\r\n        <Fragment>\r\n          <p>You have not yet setup a profile, please add some info</p>\r\n          <Link to='/create-profile' className='btn btn-primary my-1'>\r\n            Create Profile\r\n          </Link>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nDashboard.propTypes = {\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  deleteAccount: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(\r\n  Dashboard\r\n);\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\r\n\r\nconst initialState = {\r\n  company: '',\r\n  website: '',\r\n  location: '',\r\n  status: '',\r\n  skills: '',\r\n  githubusername: '',\r\n  bio: '',\r\n  twitter: '',\r\n  facebook: '',\r\n  linkedin: '',\r\n  youtube: '',\r\n  instagram: '',\r\n};\r\n\r\nconst ProfileForm = ({\r\n  profile: { profile, loading },\r\n  createProfile,\r\n  getCurrentProfile,\r\n  history,\r\n}) => {\r\n  const [formData, setFormData] = useState(initialState);\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!profile) getCurrentProfile();\r\n    if (!loading && profile) {\r\n      const profileData = { ...initialState };\r\n      for (const key in profile) {\r\n        if (key in profileData) profileData[key] = profile[key];\r\n      }\r\n      for (const key in profile.social) {\r\n        if (key in profileData) profileData[key] = profile.social[key];\r\n      }\r\n      if (Array.isArray(profileData.skills))\r\n        profileData.skills = profileData.skills.join(', ');\r\n      setFormData(profileData);\r\n    }\r\n  }, [loading, getCurrentProfile, profile]);\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    createProfile(formData, history, profile ? true : false);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Create Your Profile</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user' /> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className='form' onSubmit={onSubmit}>\r\n        <div className='form-group'>\r\n          <select name='status' value={status} onChange={onChange}>\r\n            <option>* Select Professional Status</option>\r\n            <option value='Developer'>Developer</option>\r\n            <option value='Junior Developer'>Junior Developer</option>\r\n            <option value='Senior Developer'>Senior Developer</option>\r\n            <option value='Manager'>Manager</option>\r\n            <option value='Student or Learning'>Student or Learning</option>\r\n            <option value='Instructor'>Instructor or Teacher</option>\r\n            <option value='Intern'>Intern</option>\r\n            <option value='Other'>Other</option>\r\n          </select>\r\n          <small className='form-text'>\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={onChange}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Website'\r\n            name='website'\r\n            value={website}\r\n            onChange={onChange}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={onChange}\r\n          />\r\n          <small className='form-text'>\r\n            City & state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Skills'\r\n            name='skills'\r\n            value={skills}\r\n            onChange={onChange}\r\n          />\r\n          <small className='form-text'>\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Github Username'\r\n            name='githubusername'\r\n            value={githubusername}\r\n            onChange={onChange}\r\n          />\r\n          <small className='form-text'>\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            placeholder='A short bio of yourself'\r\n            name='bio'\r\n            value={bio}\r\n            onChange={onChange}\r\n          />\r\n          <small className='form-text'>Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className='my-2'>\r\n          <button\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-twitter fa-2x' />\r\n              <input\r\n                type='text'\r\n                placeholder='Twitter URL'\r\n                name='twitter'\r\n                value={twitter}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-facebook fa-2x' />\r\n              <input\r\n                type='text'\r\n                placeholder='Facebook URL'\r\n                name='facebook'\r\n                value={facebook}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-youtube fa-2x' />\r\n              <input\r\n                type='text'\r\n                placeholder='YouTube URL'\r\n                name='youtube'\r\n                value={youtube}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-linkedin fa-2x' />\r\n              <input\r\n                type='text'\r\n                placeholder='Linkedin URL'\r\n                name='linkedin'\r\n                value={linkedin}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-instagram fa-2x' />\r\n              <input\r\n                type='text'\r\n                placeholder='Instagram URL'\r\n                name='instagram'\r\n                value={instagram}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProfileForm.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\r\n  ProfileForm\r\n);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addExperience } from '../../actions/profile';\r\n\r\nconst AddExperience = ({ addExperience, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    title: '',\r\n    location: '',\r\n    from: '',\r\n    to: '',\r\n    current: false,\r\n    description: '',\r\n  });\r\n\r\n  const { company, title, location, from, to, current, description } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Add An Experience</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-code-branch' /> Add any developer/programming\r\n        positions that you have had in the past\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form\r\n        className='form'\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          addExperience(formData, history);\r\n        }}\r\n      >\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Job Title'\r\n            name='title'\r\n            value={title}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <h4>From Date</h4>\r\n          <input type='date' name='from' value={from} onChange={onChange} />\r\n        </div>\r\n        <div className='form-group'>\r\n          <p>\r\n            <input\r\n              type='checkbox'\r\n              name='current'\r\n              checked={current}\r\n              value={current}\r\n              onChange={() => {\r\n                setFormData({ ...formData, current: !current });\r\n              }}\r\n            />{' '}\r\n            Current Job\r\n          </p>\r\n        </div>\r\n        <div className='form-group'>\r\n          <h4>To Date</h4>\r\n          <input\r\n            type='date'\r\n            name='to'\r\n            value={to}\r\n            onChange={onChange}\r\n            disabled={current}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            name='description'\r\n            cols='30'\r\n            rows='5'\r\n            placeholder='Job Description'\r\n            value={description}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAddExperience.propTypes = {\r\n  addExperience: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addExperience })(AddExperience);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addEducation } from '../../actions/profile';\r\n\r\nconst AddEducation = ({ addEducation, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    school: '',\r\n    degree: '',\r\n    fieldofstudy: '',\r\n    from: '',\r\n    to: '',\r\n    current: false,\r\n    description: '',\r\n  });\r\n\r\n  const {\r\n    school,\r\n    degree,\r\n    fieldofstudy,\r\n    from,\r\n    to,\r\n    description,\r\n    current,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Add Your Education</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-code-branch' /> Add any school or bootcamp that you\r\n        have attended\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form\r\n        className='form'\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          addEducation(formData, history);\r\n        }}\r\n      >\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* School or Bootcamp'\r\n            name='school'\r\n            value={school}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Degree or Certificate'\r\n            name='degree'\r\n            value={degree}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Field of Study'\r\n            name='fieldofstudy'\r\n            value={fieldofstudy}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <h4>From Date</h4>\r\n          <input type='date' name='from' value={from} onChange={onChange} />\r\n        </div>\r\n        <div className='form-group'>\r\n          <p>\r\n            <input\r\n              type='checkbox'\r\n              name='current'\r\n              checked={current}\r\n              value={current}\r\n              onChange={() => setFormData({ ...formData, current: !current })}\r\n            />{' '}\r\n            Current School\r\n          </p>\r\n        </div>\r\n        <div className='form-group'>\r\n          <h4>To Date</h4>\r\n          <input\r\n            type='date'\r\n            name='to'\r\n            value={to}\r\n            onChange={onChange}\r\n            disabled={current}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            name='description'\r\n            cols='30'\r\n            rows='5'\r\n            placeholder='Program Description'\r\n            value={description}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAddEducation.propTypes = {\r\n  addEducation: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addEducation })(AddEducation);\r\n","import React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nexport default () => (\r\n  <Fragment>\r\n    <img\r\n      src={spinner}\r\n      style={{ width: '200px', margin: 'auto', display: 'block' }}\r\n      alt='Loading...'\r\n    />\r\n  </Fragment>\r\n);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileItem = ({\r\n  profile: {\r\n    user: { _id, name, avatar },\r\n    status,\r\n    company,\r\n    location,\r\n    skills,\r\n  },\r\n}) => {\r\n  return (\r\n    <div className='profile bg-light'>\r\n      <img src={avatar} alt='' className='round-img' />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>\r\n          {status} {company && <span> at {company}</span>}\r\n        </p>\r\n        <p className='my-1'>{location && <span>{location}</span>}</p>\r\n        <Link to={`/profile/${_id}`} className='btn btn-primary'>\r\n          View Profile\r\n        </Link>\r\n      </div>\r\n      <ul>\r\n        {skills.slice(0, 4).map((skill, index) => (\r\n          <li key={index} className='text-primary'>\r\n            <i className='fas fa-check' /> {skill}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileItem.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileItem;\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport ProfileItem from './ProfileItem';\r\nimport { getProfiles } from '../../actions/profile';\r\n\r\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\r\n  useEffect(() => {\r\n    getProfiles();\r\n  }, [getProfiles]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n          <h1 className='large text-primary'>Developers</h1>\r\n          <p className='lead'>\r\n            <i className='fab fa-connectdevelop' /> Browse and connect with\r\n            developers\r\n          </p>\r\n          <div className='profiles'>\r\n            {profiles.length > 0 ? (\r\n              profiles.map((profile) => (\r\n                <ProfileItem key={profile._id} profile={profile} />\r\n              ))\r\n            ) : (\r\n              <h4>No profiles found...</h4>\r\n            )}\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProfiles.propTypes = {\r\n  getProfiles: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileTop = ({\r\n  profile: {\r\n    status,\r\n    company,\r\n    location,\r\n    website,\r\n    social,\r\n    user: { name, avatar },\r\n  },\r\n}) => {\r\n  return (\r\n    <div className='profile-top bg-primary p-2'>\r\n      <img className='round-img my-1' src={avatar} alt='' />\r\n      <h1 className='large'>{name}</h1>\r\n      <p className='lead'>\r\n        {status} {company && <span> at {company}</span>}\r\n      </p>\r\n      <p>{location && <span>{location}</span>}</p>\r\n      <div className='icons my-1'>\r\n        {website && (\r\n          <a href={website} target='_blank' rel='noopener noreferrer'>\r\n            <i className='fas fa-globe fa-2x' />\r\n          </a>\r\n        )}\r\n        {social && social.twitter && (\r\n          <a href={social.twitter} target='_blank' rel='noopener noreferrer'>\r\n            <i className='fab fa-twitter fa-2x' />\r\n          </a>\r\n        )}\r\n        {social && social.facebook && (\r\n          <a href={social.facebook} target='_blank' rel='noopener noreferrer'>\r\n            <i className='fab fa-facebook fa-2x' />\r\n          </a>\r\n        )}\r\n        {social && social.linkedin && (\r\n          <a href={social.linkedin} target='_blank' rel='noopener noreferrer'>\r\n            <i className='fab fa-linkedin fa-2x' />\r\n          </a>\r\n        )}\r\n        {social && social.youtube && (\r\n          <a href={social.youtube} target='_blank' rel='noopener noreferrer'>\r\n            <i className='fab fa-youtube fa-2x' />\r\n          </a>\r\n        )}\r\n        {social && social.instagram && (\r\n          <a href={social.instagram} target='_blank' rel='noopener noreferrer'>\r\n            <i className='fab fa-instagram fa-2x' />\r\n          </a>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileTop.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileTop;\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileAbout = ({\r\n  profile: {\r\n    bio,\r\n    skills,\r\n    user: { name },\r\n  },\r\n}) => (\r\n  <div className='profile-about bg-light p-2'>\r\n    {bio && (\r\n      <Fragment>\r\n        <h2 className='text-primary'>{name.trim().split(' ')[0]}s Bio</h2>\r\n        <p>{bio}</p>\r\n        <div className='line' />\r\n      </Fragment>\r\n    )}\r\n    <h2 className='text-primary'>Skill Set</h2>\r\n    <div className='skills'>\r\n      {skills.map((skill, index) => (\r\n        <div key={index} className='p-1'>\r\n          <i className='fas fa-check' /> {skill}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nProfileAbout.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileAbout;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\nimport moment from 'moment';\r\n\r\nconst ProfileExperience = ({\r\n  experience: { company, title, location, current, to, from, description },\r\n}) => (\r\n  <div>\r\n    <h3 className='text-dark'>{company}</h3>\r\n    <p>\r\n      <Moment format='YYYY/MM/DD'>{moment.utc(from)}</Moment> -{' '}\r\n      {!to ? ' Now' : <Moment format='YYYY/MM/DD'>{moment.utc(to)}</Moment>}\r\n    </p>\r\n    <p>\r\n      <strong>Position: </strong> {title}\r\n    </p>\r\n    <p>\r\n      <strong>Location: </strong> {location}\r\n    </p>\r\n    <p>\r\n      <strong>Description: </strong> {description}\r\n    </p>\r\n  </div>\r\n);\r\n\r\nProfileExperience.propTypes = {\r\n  experience: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileExperience;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\nimport moment from 'moment';\r\n\r\nconst ProfileEducation = ({\r\n  education: { school, degree, fieldofstudy, current, to, from, description },\r\n}) => (\r\n  <div>\r\n    <h3 className='text-dark'>{school}</h3>\r\n    <p>\r\n      <Moment format='YYYY/MM/DD'>{moment.utc(from)}</Moment> -{' '}\r\n      {!to ? ' Now' : <Moment format='YYYY/MM/DD'>{moment.utc(to)}</Moment>}\r\n    </p>\r\n    <p>\r\n      <strong>Degree: </strong> {degree}\r\n    </p>\r\n    <p>\r\n      <strong>Field Of Study: </strong> {fieldofstudy}\r\n    </p>\r\n    <p>\r\n      <strong>Description: </strong> {description}\r\n    </p>\r\n  </div>\r\n);\r\n\r\nProfileEducation.propTypes = {\r\n  education: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileEducation;\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getGithubRepos } from '../../actions/profile';\r\n\r\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\r\n  useEffect(() => {\r\n    getGithubRepos(username);\r\n  }, [getGithubRepos, username]);\r\n\r\n  return (\r\n    <div className='profile-github'>\r\n      <h2 className='text-primary my-1'>Github Repos</h2>\r\n      {repos.map((repo) => (\r\n        <div key={repo.id} className='repo bg-white p-1 my-1'>\r\n          <div>\r\n            <h4>\r\n              <a href={repo.html_url} target='_blank' rel='noopener noreferrer'>\r\n                {repo.name}\r\n              </a>\r\n            </h4>\r\n            <p>{repo.description}</p>\r\n          </div>\r\n          <div>\r\n            <ul>\r\n              <li className='badge badge-primary'>\r\n                Stars: {repo.stargazers_count}\r\n              </li>\r\n              <li className='badge badge-dark'>\r\n                Watchers: {repo.watchers_count}\r\n              </li>\r\n              <li className='badge badge-light'>Forks: {repo.forks_count}</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileGithub.propTypes = {\r\n  getGithubRepos: PropTypes.func.isRequired,\r\n  repos: PropTypes.array.isRequired,\r\n  username: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  repos: state.profile.repos,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getProfileById } from '../../actions/profile';\r\nimport ProfileTop from './ProfileTop';\r\nimport ProfileAbout from './ProfileAbout';\r\nimport ProfileExperience from './ProfileExperience';\r\nimport ProfileEducation from './ProfileEducation';\r\nimport ProfileGithub from './ProfileGithub';\r\n\r\nconst Profile = ({\r\n  getProfileById,\r\n  profile: { profile, loading },\r\n  auth,\r\n  match,\r\n}) => {\r\n  useEffect(() => {\r\n    getProfileById(match.params.id);\r\n  }, [getProfileById, match.params.id]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {profile === null || loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n          <Link to='/profiles' className='btn btn-light'>\r\n            Back To Profiles\r\n          </Link>\r\n          {auth.isAuthenticated &&\r\n            auth.loading === false &&\r\n            auth.user._id === profile.user._id && (\r\n              <Link to='/edit-profile' className='btn btn-dark'>\r\n                Edit Profile\r\n              </Link>\r\n            )}\r\n          <div className='profile-grid my-1'>\r\n            <ProfileTop profile={profile}></ProfileTop>\r\n            <ProfileAbout profile={profile}></ProfileAbout>\r\n            <div className='profile-exp bg-white p-2'>\r\n              <h2 className='text-primary'>Experience</h2>\r\n              {profile.experience.length > 0 ? (\r\n                <Fragment>\r\n                  {profile.experience.map((experience) => (\r\n                    <ProfileExperience\r\n                      key={experience._id}\r\n                      experience={experience}\r\n                    />\r\n                  ))}\r\n                </Fragment>\r\n              ) : (\r\n                <h4>No Experience credentials</h4>\r\n              )}\r\n            </div>\r\n\r\n            <div className='profile-edu bg-white p-2'>\r\n              <h2 className='text-primary'>Education</h2>\r\n              {profile.education.length > 0 ? (\r\n                <Fragment>\r\n                  {profile.education.map((education) => (\r\n                    <ProfileEducation\r\n                      key={education._id}\r\n                      education={education}\r\n                    />\r\n                  ))}\r\n                </Fragment>\r\n              ) : (\r\n                <h4>No Education credentials</h4>\r\n              )}\r\n            </div>\r\n            {profile.githubusername && (\r\n              <ProfileGithub username={profile.githubusername}></ProfileGithub>\r\n            )}\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  getProfileById: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfileById })(Profile);\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport { addLike, removeLike, deletePost } from '../../actions/post';\r\n\r\nconst PostItem = ({\r\n  addLike,\r\n  removeLike,\r\n  deletePost,\r\n  auth,\r\n  post: { _id, text, name, avatar, user, likes, comments, date },\r\n  showActions,\r\n}) => (\r\n  <div className='post bg-white p-1 my-1'>\r\n    <div>\r\n      <Link to={`/profile/${user}`}>\r\n        <img className='round-img' src={avatar} alt='' />\r\n        <h4>{name}</h4>\r\n      </Link>\r\n    </div>\r\n    <div>\r\n      <p className='my-1'>{text}</p>\r\n      <p className='post-date'>\r\n        Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\r\n      </p>\r\n\r\n      {showActions && (\r\n        <Fragment>\r\n          <button\r\n            onClick={() => addLike(_id)}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            <i className='fas fa-thumbs-up' />{' '}\r\n            <span>{likes.length > 0 && <span>{likes.length}</span>}</span>\r\n          </button>\r\n          <button\r\n            onClick={() => removeLike(_id)}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            <i className='fas fa-thumbs-down' />\r\n          </button>\r\n          <Link to={`/posts/${_id}`} className='btn btn-primary'>\r\n            Discussion{' '}\r\n            {comments.length > 0 && (\r\n              <span className='comment-count'>{comments.length}</span>\r\n            )}\r\n          </Link>\r\n          {!auth.loading && user === auth.user._id && (\r\n            <button\r\n              onClick={() => deletePost(_id)}\r\n              type='button'\r\n              className='btn btn-danger'\r\n            >\r\n              <i className='fas fa-times' />\r\n            </button>\r\n          )}\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nPostItem.defaultProps = {\r\n  showActions: true,\r\n};\r\n\r\nPostItem.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  addLike: PropTypes.func.isRequired,\r\n  removeLike: PropTypes.func.isRequired,\r\n  deletePost: PropTypes.func.isRequired,\r\n  showActions: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(\r\n  PostItem\r\n);\r\n","import api from '../utils/api';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  GET_POSTS,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_POST,\r\n  ADD_POST,\r\n  GET_POST,\r\n  ADD_COMMENT,\r\n  REMOVE_COMMENT,\r\n} from './types';\r\n\r\n// Get posts\r\nexport const getPosts = () => async (dispatch) => {\r\n  try {\r\n    const res = await api.get('/posts');\r\n\r\n    dispatch({\r\n      type: GET_POSTS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add like\r\nexport const addLike = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await api.put(`/posts/like/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { id, likes: res.data },\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Remove like\r\nexport const removeLike = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await api.put(`/posts/unlike/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { id, likes: res.data },\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Delete post\r\nexport const deletePost = (id) => async (dispatch) => {\r\n  try {\r\n    await api.delete(`/posts/${id}`);\r\n\r\n    dispatch({\r\n      type: DELETE_POST,\r\n      payload: id,\r\n    });\r\n\r\n    dispatch(setAlert('Post Removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add post\r\nexport const addPost = (formData) => async (dispatch) => {\r\n  try {\r\n    const res = await api.post('/posts', formData);\r\n\r\n    dispatch({\r\n      type: ADD_POST,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert('Post Created', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Get post\r\nexport const getPost = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await api.get(`/posts/${id}`);\r\n\r\n    dispatch({\r\n      type: GET_POST,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add comment\r\nexport const addComment = (postId, formData) => async (dispatch) => {\r\n  try {\r\n    const res = await api.post(`/posts/comment/${postId}`, formData);\r\n\r\n    dispatch({\r\n      type: ADD_COMMENT,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert('Comment Added', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Delete comment\r\nexport const deleteComment = (postId, commentId) => async (dispatch) => {\r\n  try {\r\n    await api.delete(`/posts/comment/${postId}/${commentId}`);\r\n\r\n    dispatch({\r\n      type: REMOVE_COMMENT,\r\n      payload: commentId,\r\n    });\r\n\r\n    dispatch(setAlert('Comment Removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addPost } from '../../actions/post';\r\n\r\nconst PostForm = ({ addPost }) => {\r\n  const [text, setText] = useState('');\r\n\r\n  return (\r\n    <div className='post-form'>\r\n      <div className='bg-primary p'>\r\n        <h3>Say Something...</h3>\r\n      </div>\r\n      <form\r\n        className='form my-1'\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          addPost({ text });\r\n          setText('');\r\n        }}\r\n      >\r\n        <textarea\r\n          name='text'\r\n          cols='30'\r\n          rows='5'\r\n          placeholder='Create a post'\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n          required\r\n        />\r\n        <input type='submit' className='btn btn-dark my-1' value='Submit' />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nPostForm.propTypes = {\r\n  addPost: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addPost })(PostForm);\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport PostItem from './PostItem';\r\nimport PostForm from './PostForm';\r\nimport { getPosts } from '../../actions/post';\r\n\r\nconst Posts = ({ getPosts, post: { posts } }) => {\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, [getPosts]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Posts</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user' /> Welcome to the community\r\n      </p>\r\n      <PostForm />\r\n      <div className='posts'>\r\n        {posts.map((post) => (\r\n          <PostItem key={post._id} post={post} />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nPosts.propTypes = {\r\n  getPosts: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  post: state.post,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPosts })(Posts);\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addComment } from '../../actions/post';\r\n\r\nconst CommentForm = ({ postId, addComment }) => {\r\n  const [text, setText] = useState('');\r\n\r\n  return (\r\n    <div className='post-form'>\r\n      <div className='bg-primary p'>\r\n        <h3>Leave a Comment</h3>\r\n      </div>\r\n      <form\r\n        className='form my-1'\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          addComment(postId, { text });\r\n          setText('');\r\n        }}\r\n      >\r\n        <textarea\r\n          name='text'\r\n          cols='30'\r\n          rows='5'\r\n          placeholder='Comment the post'\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n          required\r\n        />\r\n        <input type='submit' className='btn btn-dark my-1' value='Submit' />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n  addComment: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addComment })(CommentForm);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Moment from 'react-moment';\r\nimport { deleteComment } from '../../actions/post';\r\n\r\nconst CommentItem = ({\r\n  postId,\r\n  comment: { _id, text, name, avatar, user, date },\r\n  auth,\r\n  deleteComment,\r\n}) => (\r\n  <div className='post bg-white p-1 my-1'>\r\n    <div>\r\n      <Link to={`/profile/${user}`}>\r\n        <img className='round-img' src={avatar} alt='' />\r\n        <h4>{name}</h4>\r\n      </Link>\r\n    </div>\r\n    <div>\r\n      <p className='my-1'>{text}</p>\r\n      <p className='post-date'>\r\n        Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\r\n      </p>\r\n      {!auth.loading && user === auth.user._id && (\r\n        <button\r\n          onClick={() => deleteComment(postId, _id)}\r\n          type='button'\r\n          className='btn btn-danger'\r\n        >\r\n          <i className='fas fa-times' />\r\n        </button>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nCommentItem.propTypes = {\r\n  postId: PropTypes.string.isRequired,\r\n  comment: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  deleteComment: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport PostItem from '../posts/PostItem';\r\nimport CommentForm from '../post/CommentForm';\r\nimport CommentItem from '../post/CommentItem';\r\nimport { getPost } from '../../actions/post';\r\n\r\nconst Post = ({ getPost, post: { post, loading }, match }) => {\r\n  useEffect(() => {\r\n    getPost(match.params.id);\r\n  }, [getPost, match.params.id]);\r\n\r\n  return loading || post === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <Link to='/posts' className='btn'>\r\n        Back To Posts\r\n      </Link>\r\n      <PostItem post={post} showActions={false} />\r\n      <CommentForm postId={post._id} />\r\n      <div className='comments'>\r\n        {post.comments.map((comment) => (\r\n          <CommentItem key={comment._id} comment={comment} postId={post._id} />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nPost.propTypes = {\r\n  getPost: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  post: state.post,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPost })(Post);\r\n","import React, { Fragment } from 'react';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <Fragment>\r\n      <h1 className='x-large text-primary'>\r\n        <i className='fas fa-exclamation-triangle' /> Page Not Found\r\n      </h1>\r\n      <p className='large'>Sorry, this page does not exist</p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  auth: { isAuthenticated, loading },\r\n  ...rest\r\n}) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      loading ? (\r\n        <Spinner />\r\n      ) : isAuthenticated ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to='/login' />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Register from '../auth/Register';\r\nimport Login from '../auth/Login';\r\nimport Alert from '../layout/alert';\r\nimport Dashboard from '../dashboard/Dashboard';\r\nimport ProfileForm from '../profile-form/ProfileForm';\r\nimport AddExperience from '../profile-form/AddExperience';\r\nimport AddEducation from '../profile-form/AddEducation';\r\nimport Profiles from '../profiles/Profiles';\r\nimport Profile from '../profile/Profile';\r\nimport Posts from '../posts/Posts';\r\nimport Post from '../post/Post';\r\nimport NotFound from '../layout/NotFound';\r\nimport PrivateRoute from '../routing/PrivateRoute';\r\n\r\nconst Routes = (props) => {\r\n  return (\r\n    <section className='container'>\r\n      <Alert />\r\n      <Switch>\r\n        <Route exact path='/register' component={Register} />\r\n        <Route exact path='/login' component={Login} />\r\n        <Route exact path='/profiles' component={Profiles} />\r\n        <Route exact path='/profile/:id' component={Profile} />\r\n        <PrivateRoute exact path='/dashboard' component={Dashboard} />\r\n        <PrivateRoute exact path='/create-profile' component={ProfileForm} />\r\n        <PrivateRoute exact path='/edit-profile' component={ProfileForm} />\r\n        <PrivateRoute exact path='/add-experience' component={AddExperience} />\r\n        <PrivateRoute exact path='/add-education' component={AddEducation} />\r\n        <PrivateRoute exact path='/posts' component={Posts} />\r\n        <PrivateRoute exact path='/posts/:id' component={Post} />\r\n        <Route component={NotFound} />\r\n      </Switch>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/layout/NavBar';\nimport Landing from './components/layout/Landing';\nimport Routes from './components/routing/Routes';\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { loadUser } from './actions/auth';\nimport setAuthToken from './utils/setAuthToken';\nimport './App.css';\n\nconst App = () => {\n  useEffect(() => {\n    setAuthToken(localStorage.token);\n    store.dispatch(loadUser());\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Landing} />\n            <Route component={Routes} />\n          </Switch>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}